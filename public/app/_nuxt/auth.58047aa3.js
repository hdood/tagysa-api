var f=Object.defineProperty;var l=(i,s,r)=>s in i?f(i,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):i[s]=r;var o=(i,s,r)=>(l(i,typeof s!="symbol"?s+"":s,r),r);import{a2 as d,K as w,L as y,G as p,M as u,x as g}from"./entry.65f15cac.js";const m=d(),e=w(m).provide.axios;class h{constructor(){o(this,"register",async(s,r,a,t,n,c)=>{await e.post("/register",{name:s,email:r,password:n,phone:a,country_code:t,password_confirmation:c})});o(this,"login",async(s,r)=>{await e.post("/login",{email:s,password:r})});o(this,"logout",async()=>{await e.post("/logout"),p().user.value={}});o(this,"sendVerificationLink",async()=>{try{return(await e.post("/email/verification-notification")).data}catch{return!1}});o(this,"verifyEmail",async(s,r)=>{const{successNotification:a,errorNotification:t}=u();try{return await e(`/verify-email/${s}/${r}`),a("email verified successfully"),!0}catch{return t("failed to verify email"),!1}});o(this,"changePassword",async(s,r,a)=>{const{successNotification:t,errorNotification:n}=u();try{return await e.post("/api/change-password",{old_password:s,new_password:r,new_password_confirmation:a}),t("password updated successfully"),!0}catch(c){if(c.response.data.error=="wrong password"){n("wrong password");return}return n("password confirmation does not match password"),!1}});o(this,"deleteAccount",async s=>{const{successNotification:r,errorNotification:a}=u(),{user:t}=g(p());try{return await e.post("/api/account",{password:s}),r("account deleted successfully"),t.value={},!0}catch{return a("wrong password"),!1}})}}const x=y("auth",()=>new h);export{x as u};
